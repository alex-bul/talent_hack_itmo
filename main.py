from telebot import TeleBot

from telebot.types import BotCommand, Message

from ai_module.chatgpt import GPT_MODEL, ask_chat_gpt
from core.config import BOT_TOKEN
from db.methods import set_chat_mode, get_user

bot = TeleBot(token=BOT_TOKEN)

chat_gpt_context = {}

bot.set_my_commands([
    BotCommand('/wiki', '–ü–æ–∏—Å–∫ –ø–æ –≤–∏–∫–∏'),
    BotCommand('/chatgpt', '–û–±—â–µ–Ω–∏–µ —Å ChatGPT'),
    BotCommand('/calendar', '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º'),
    BotCommand('/help', '–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
])


def handle_wiki(message: Message):
    user_telegram_id = message.from_user.id
    bot.send_message(user_telegram_id, "–ù–µ –Ω–∞–π–¥–µ–Ω–æ!")


def handle_chatgpt(message: Message):
    user_telegram_id = message.from_user.id
    bot.send_chat_action(user_telegram_id, action='typing', timeout=100)
    bot.send_message(user_telegram_id, ask_chat_gpt(text=message.text))


def handle_calendar(message: Message):
    user_telegram_id = message.from_user.id
    bot.send_message(user_telegram_id, "–û—à–∏–±–∫–∞")


mods_info = {
    'wiki': ("–°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ, –∞ —è –ø–æ–ø—Ä–æ–±—É—é –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–≥–æ üôÉ", handle_wiki),
    'chatgpt': (f"ChatGPT ({GPT_MODEL}) –Ω–∞ —Å–≤—è–∑–∏, –∑–∞–¥–∞–≤–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å üëá", handle_chatgpt),
    'calendar': ('–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...', handle_calendar)
}


@bot.message_handler(commands=['start', 'help'])
def handle_start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç ‚ú®\n\n"
                                      "/wiki ‚Äî —É–º–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –∫–æ–º–ø–∞–Ω–∏–∏\n"
                                      "/chatgpt ‚Äî –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å chatGPT\n"
                                      "/calendar ‚Äî –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –Ø–Ω–¥–µ–∫—Å.–ö–∞–ª–µ–Ω–¥–∞—Ä—å\n\n"
                                      "–õ—é–±—É—é –∫–æ–º–∞–Ω–¥—É –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑ –º–µ–Ω—é –≤ –Ω–∏–∂–Ω–µ–º –ª–µ–≤–æ–º —É–≥–ª—É")


@bot.message_handler(commands=['wiki', 'chatgpt', 'calendar'])
def handle_chat_mode_change(message: Message):
    user_telegram_id = message.from_user.id
    command = message.text.strip('/')

    for mode, (answer, handler) in mods_info.items():
        if command.startswith(mode):
            bot.send_message(user_telegram_id, answer)
            set_chat_mode(user_telegram_id, mode)
            break


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_telegram_id = message.from_user.id
    user = get_user(user_telegram_id)

    for mode, (answer, handler) in mods_info.items():
        if user.chat_mode == mode:
            handler(message)
            break



# @bot.message_handler(content_types=['voice'])
# def voice_handler(message):
#     chat_id = message.chat.id
#
#     bot.send_chat_action(chat_id, action='typing', timeout=100)
#
#     bot_message, text, error = voice_message_to_text(message)
#
#     bot.send_message(chat_id, bot_message)
#
#     if not error:
#         message_handler(message, text)


bot.polling(none_stop=True)
